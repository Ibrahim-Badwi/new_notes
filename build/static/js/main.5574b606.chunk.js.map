{"version":3,"sources":["components/Note.js","components/Notification.js","components/Footer.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","axios","get","then","response","data","newObject","post","id","put","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","newNoteObject","date","Date","toISOString","concat","value","onChange","target","placeholder","type","ReactDOM","render","document","getElementById"],"mappings":"kNAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,qBAAuB,iBAE3B,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QACN,4BAAQC,QAASL,GAAmBC,KCI3BK,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,MAAgB,KAAZA,EACO,KAGP,yBAAKJ,UAAU,SACVI,ICQEC,EAdA,WAMX,OACI,yBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAIN,6BACA,uG,gBCTNC,EAAU,kCAwBD,EAhBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAVA,SAAAC,GAEX,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ9B,EALA,SAACG,EAAIF,GAEhB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SC0E9BK,EA1FH,SAACC,GAAW,IAAD,EACKC,mBAAS,IADd,mBACdC,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,OAImBN,mBAAS,IAJ5B,mBAIdO,EAJc,KAIAC,EAJA,KAarBC,qBAPa,WACXC,QAAQC,IAAI,UACVC,IAAqBrB,MAAK,SAAAsB,GACxBX,EAASW,QAIC,IAEhB,IA0CMC,EAAcT,EAAUJ,EAAQA,EAAMc,QAAO,SAACzC,GAAD,OAAUA,EAAKG,aAElE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASyB,IACvB,6BACE,4BAAQ3B,QAAS,kBAAM0B,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGS,EAAYE,KAAI,SAAC1C,GAAD,OACf,kBAAC,EAAD,CACE2C,IAAK3C,EAAKsB,GACVtB,KAAMA,EACNC,iBAAkB,kBAtCD,SAAAqB,GACzB,IAAMtB,EAAO2B,EAAMiB,MAAK,SAACC,GAAD,OAAOA,EAAEvB,KAAOA,KAClCwB,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDmC,EACUhB,EAAIwB,GACX7B,MAAK,SAAA8B,GACJnB,EAASD,EAAMe,KAAI,SAAC1C,GAAD,OAAWA,EAAKsB,KAAOA,EAAKtB,EAAO+C,SAEvDC,OAAM,SAAAC,GAELf,EAAgB,QAAD,OACLlC,EAAKK,QADA,qCAGf6C,YAAW,WACThB,EAAgB,MACf,KACHN,EAASD,EAAMc,QAAO,SAAAI,GAAC,OAAIA,EAAEvB,KAAOA,SAqBR6B,CAAmBnD,EAAKsB,WAItD,0BAAM8B,SA9DM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAgB,CACpBlD,QAASwB,EACT2B,MAAM,IAAIC,MAAOC,cACjBvD,WAAW,GAGbmC,EACUiB,GACPtC,MAAK,SAAA8B,GACJnB,EAASD,EAAMgC,OAAOZ,IACtBjB,EAAW,SAmDX,2BACE8B,MAAO/B,EACPgC,SAjDiB,SAACR,GACxBvB,EAAWuB,EAAMS,OAAOF,QAiDlBG,YAAY,kBAEd,4BAAQC,KAAK,UAAb,SAEF,kBAAC,EAAD,Q,MCtFNC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5574b606.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n  const label = note.important\r\n    ? 'make not important' : 'make important';\r\n\r\n  return (\r\n    <li className=\"note\">\r\n      {note.content} \r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  )\r\n}\r\n\r\nexport default Note;","import React from 'react';\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === \"\"){\r\n        return null\r\n    }\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2020</em>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Footer;\r\n","import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001/api/notes';\r\n\r\nconst getAll1 = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n};\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject);\r\n    return request.then(response => response.data);\r\n};\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n};","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Note from \"./components/Note\";\r\nimport Notification from \"./components/Notification\";\r\nimport Footer from \"./components/Footer\";\r\nimport noteService from \"./services/notes\";\r\n\r\nconst App = (props) => {\r\n  const [notes, setNotes] = useState([]);\r\n  const [newNote, setNewNote] = useState(\"\");\r\n  const [showAll, setShowAll] = useState(true);\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const hook = () => {\r\n    console.log(\"effect\");\r\n      noteService.getAll().then(initialNotes => {\r\n        setNotes(initialNotes);\r\n      });\r\n  };\r\n\r\n  useEffect(hook, []);\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault();\r\n    const newNoteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: false,\r\n    };\r\n\r\n    noteService\r\n      .create(newNoteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote));\r\n        setNewNote(\"\");    \r\n      })\r\n  };\r\n\r\n  const handleNotechange = (event) => {\r\n    setNewNote(event.target.value);\r\n  };\r\n\r\n  const toggleImportanceOf = id => {\r\n    const note = notes.find((n) => n.id === id);\r\n    const changedNote = { ...note, important: !note.important };\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\r\n      })\r\n      .catch(error => {\r\n        // alert(`the note '${note.content}' was already deleted from server`);\r\n        setErrorMessage(\r\n          `Note ${note.content} was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(\"\");\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id));\r\n      })\r\n\r\n  };\r\n\r\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)}>\r\n          show {showAll ? \"important\" : \"all\"}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {notesToShow.map((note) => (\r\n          <Note\r\n            key={note.id}\r\n            note={note}\r\n            toggleImportance={() => toggleImportanceOf(note.id)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <form onSubmit={addNote}>\r\n        <input\r\n          value={newNote}\r\n          onChange={handleNotechange}\r\n          placeholder=\"a new note...\"\r\n        />\r\n        <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App';\n\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}